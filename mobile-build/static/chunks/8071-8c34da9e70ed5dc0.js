"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8071],{38071:(e,t,r)=>{r.d(t,{e7:()=>A});var l=r(65040),a=r(95704);function o(){let e="https://wkmbtgrnsdtrhjkuspqh.supabase.co",t=a.env.SUPABASE_SERVICE_ROLE_KEY;if(!e)return console.warn("Missing NEXT_PUBLIC_SUPABASE_URL environment variable"),(0,l.UU)("https://mock.supabase.co","mock-key",{auth:{autoRefreshToken:!1,persistSession:!1}});if(!t)return console.warn("Missing SUPABASE_SERVICE_ROLE_KEY environment variable"),(0,l.UU)(e,"mock-key",{auth:{autoRefreshToken:!1,persistSession:!1}});try{new URL(e)}catch(r){return console.warn("Invalid Supabase URL format: ".concat(e)),(0,l.UU)("https://mock.supabase.co",t,{auth:{autoRefreshToken:!1,persistSession:!1}})}return(0,l.UU)(e,t,{auth:{autoRefreshToken:!1,persistSession:!1}})}function s(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},{maxLength:r=50,allowNumbers:l=!0,separator:a="-"}=t;if(!e||"string"!=typeof e)return"college";let o=e.toLowerCase().trim().replace(/[^a-z0-9\s]/g,"");if(l||(o=o.replace(/[0-9]/g,"")),(o=o.replace(/\s+/g," ").trim().replace(/\s/g,a).replace(RegExp("".concat(a,"+"),"g"),a).replace(RegExp("^".concat(a,"+|").concat(a,"+$"),"g"),""))||(o="college"),o.length>r){let e=(o=o.substring(0,r)).lastIndexOf(a);e>0&&(o=o.substring(0,e)),o=o.replace(new RegExp("".concat(a,"+$")),"")}return o}function n(e){if(!e||"string"!=typeof e)return{isValid:!1,error:"Slug cannot be empty"};let t=e.trim();return t.length<3?{isValid:!1,error:"Slug must be at least 3 characters long"}:t.length>100?{isValid:!1,error:"Slug cannot exceed 100 characters"}:t.startsWith("-")||t.endsWith("-")?{isValid:!1,error:"Slug cannot start or end with a hyphen"}:t.includes("--")?{isValid:!1,error:"Slug cannot contain consecutive hyphens"}:/^[a-z0-9]+(-[a-z0-9]+)*$/.test(t)?["admin","api","www","mail","ftp","localhost","dashboard","profile","settings","login","signup","auth","callback","about","contact","privacy","terms","help","support"].includes(t)?{isValid:!1,error:"Slug cannot use reserved words"}:{isValid:!0,sanitized:t}:{isValid:!1,error:"Slug can only contain lowercase letters, numbers, and hyphens"}}async function c(e,t){let r=o();n(e).isValid||(e=s(e));let l=e,a=0;for(;;){let{data:o,error:s}=await r.from("colleges").select("id").eq("slug",l).maybeSingle();if(s)throw console.error("Error checking slug uniqueness:",s),Error("Failed to validate slug uniqueness");if(!o||t&&o.id===t)break;a++,l="".concat(e,"-").concat(a)}return l}async function i(e,t){return c(s(e),t)}let u={generateSlug:s,ensureUniqueSlug:c,validateSlug:n,sanitizeSlug:function(e){if(!e||"string"!=typeof e)return"college";let t=e.toLowerCase().trim().replace(/[^a-z0-9\s_-]/g,"").replace(/[\s_]+/g,"-").replace(/-+/g,"-").replace(/^-+|-+$/g,"").substring(0,100);return!t||t.length<3?"college":t}};async function g(e){try{var t,r;o();let l=await i(e.name),a={...e,slug:l,is_verified:!1,is_active:!0,created_at:new Date().toISOString(),updated_at:new Date().toISOString(),scholarships:(null==(t=e.scholarships)?void 0:t.map(e=>({name:e.name,amount:"string"==typeof e.amount?parseFloat(e.amount)||0:e.amount||0,eligibility:e.eligibility,application_deadline:e.application_deadline||""})))||null,entrance_tests:(null==(r=e.entrance_tests)?void 0:r.map(e=>({exam_name:e.name,exam_date:e.exam_date||"",registration_deadline:e.registration_deadline||"",syllabus:e.syllabus_url?[e.syllabus_url]:[]})))||null,fee_structure:e.fee_structure?{annual:e.fee_structure.tuition_fee,one_time_fees:{admission_fee:0,library_fee:0,lab_fee:0}}:null},{data:s,error:n}=await o().from("colleges").insert([a]).select("\n        *,\n        college_courses(*),\n        college_notices(*)\n      ").single();if(n)return console.error("Error creating college profile:",n),{data:null,error:n.message};return{data:{...s,slug:s.slug||"",courses:s.college_courses||[],notices:s.college_notices||[],events:[]},error:null}}catch(e){return console.error("Unexpected error creating college profile:",e),{data:null,error:"Failed to create college profile"}}}async function d(e){try{let t=o(),{data:r,error:l}=await t.from("colleges").select("\n        *,\n        college_courses(*),\n        college_notices(*)\n      ").eq("slug",e).single();if(l){if("PGRST116"===l.code)return{data:null,error:"College not found"};return console.error("Error fetching college by slug:",l),{data:null,error:l.message}}return{data:{...r,slug:r.slug||"",courses:r.college_courses||[],notices:r.college_notices||[],events:[]},error:null}}catch(e){return console.error("Unexpected error fetching college by slug:",e),{data:null,error:"Failed to fetch college profile"}}}async function h(e,t){try{var r,l;o(),t.name&&!t.slug&&(t.slug=await i(t.name,e));let a={...t,updated_at:new Date().toISOString(),scholarships:(null==(r=t.scholarships)?void 0:r.map(e=>({name:e.name,amount:"string"==typeof e.amount?parseFloat(e.amount)||0:e.amount||0,eligibility:e.eligibility,application_deadline:e.application_deadline||""})))||void 0,entrance_tests:(null==(l=t.entrance_tests)?void 0:l.map(e=>({exam_name:e.name,exam_date:e.exam_date||"",registration_deadline:e.registration_deadline||"",syllabus:e.syllabus_url?[e.syllabus_url]:[]})))||void 0,fee_structure:t.fee_structure?{annual:t.fee_structure.tuition_fee,one_time_fees:{admission_fee:0,library_fee:0,lab_fee:0}}:void 0},{data:s,error:n}=await o().from("colleges").update(a).eq("id",e).select("\n        *,\n        college_courses(*),\n        college_notices(*)\n      ").single();if(n)return console.error("Error updating college profile:",n),{data:null,error:n.message};return{data:{...s,slug:s.slug||"",courses:s.college_courses||[],notices:s.college_notices||[],events:[]},error:null}}catch(e){return console.error("Unexpected error updating college profile:",e),{data:null,error:"Failed to update college profile"}}}async function f(e){try{let t=o(),{data:r,error:l}=await t.from("college_courses").select("*").eq("college_id",e).eq("is_active",!0).order("name");if(l)return console.error("Error fetching college courses:",l),{data:null,error:l.message};return{data:r||[],error:null}}catch(e){return console.error("Unexpected error fetching college courses:",e),{data:null,error:"Failed to fetch college courses"}}}async function p(e){try{var t;o();let r={...e,is_active:null==(t=e.is_active)||t,created_at:new Date().toISOString(),updated_at:new Date().toISOString(),fees:e.fees?{tuition_fee:e.fees.tuition,other_fees:e.fees.other,total_fee:e.fees.total,currency:"INR"}:null},{data:l,error:a}=await o().from("college_courses").insert([r]).select().single();if(a)return console.error("Error creating college course:",a),{data:null,error:a.message};return{data:l,error:null}}catch(e){return console.error("Unexpected error creating college course:",e),{data:null,error:"Failed to create college course"}}}async function _(e,t){try{o();let r={...t,updated_at:new Date().toISOString()},{data:l,error:a}=await o().from("college_courses").update(r).eq("id",e).select().single();if(a)return console.error("Error updating college course:",a),{data:null,error:a.message};return{data:l,error:null}}catch(e){return console.error("Unexpected error updating college course:",e),{data:null,error:"Failed to update college course"}}}async function m(e){try{o();let{data:t,error:r}=await o().from("college_courses").update({is_active:!1,updated_at:new Date().toISOString()}).eq("id",e).select().single();if(r)return console.error("Error deleting college course:",r),{data:null,error:r.message};return{data:t,error:null}}catch(e){return console.error("Unexpected error deleting college course:",e),{data:null,error:"Failed to delete college course"}}}async function y(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];try{let r=o().from("college_courses").select("*").eq("college_id",e).order("name");t||(r=r.eq("is_active",!0));let{data:l,error:a}=await r;if(a)return console.error("Error fetching all college courses:",a),{data:null,error:a.message};return{data:l||[],error:null}}catch(e){return console.error("Unexpected error fetching all college courses:",e),{data:null,error:"Failed to fetch college courses"}}}async function w(e){try{let t=o(),{data:r,error:l}=await t.from("college_notices").select("*").eq("college_id",e).eq("is_active",!0).order("published_at",{ascending:!1});if(l)return console.error("Error fetching college notices:",l),{data:null,error:l.message};return{data:r||[],error:null}}catch(e){return console.error("Unexpected error fetching college notices:",e),{data:null,error:"Failed to fetch college notices"}}}async function S(e){try{var t;o();let r={...e,type:e.type||"general",is_active:null==(t=e.is_active)||t,published_at:e.published_at||new Date().toISOString(),created_at:new Date().toISOString(),updated_at:new Date().toISOString()},{data:l,error:a}=await o().from("college_notices").insert([r]).select().single();if(a)return console.error("Error creating college notice:",a),{data:null,error:a.message};return{data:l,error:null}}catch(e){return console.error("Unexpected error creating college notice:",e),{data:null,error:"Failed to create college notice"}}}async function v(){try{let e=o(),{data:t,error:r}=await e.from("colleges").select("\n        *,\n        college_courses(*),\n        college_notices(*)\n      ").order("name");if(r)return console.error("Error fetching all colleges:",r),{data:null,error:r.message};return{data:(null==t?void 0:t.map(e=>({...e,slug:e.slug||"",courses:e.college_courses||[],notices:e.college_notices||[],events:[]})))||[],error:null}}catch(e){return console.error("Unexpected error fetching all colleges:",e),{data:null,error:"Failed to fetch colleges"}}}class C{set(e,t,r){let l=Date.now(),a=r||this.defaultTTL;this.cache.size>=this.maxSize&&!this.cache.has(e)&&this.evictLRU(),this.cache.set(e,{data:t,timestamp:l,ttl:a,accessCount:0,lastAccessed:l}),this.stats.size=this.cache.size}get(e){let t=this.cache.get(e);if(!t)return this.stats.misses++,null;let r=Date.now();return r-t.timestamp>t.ttl?(this.cache.delete(e),this.stats.misses++,this.stats.size=this.cache.size,null):(t.accessCount++,t.lastAccessed=r,this.stats.hits++,t.data)}has(e){let t=this.cache.get(e);return!!t&&(!(Date.now()-t.timestamp>t.ttl)||(this.cache.delete(e),this.stats.size=this.cache.size,!1))}delete(e){let t=this.cache.delete(e);return t&&(this.stats.size=this.cache.size),t}clear(){this.cache.clear(),this.stats.size=0,this.stats.hits=0,this.stats.misses=0}getStats(){return{...this.stats}}evictLRU(){let e=null,t=Date.now();for(let[r,l]of this.cache.entries())l.lastAccessed<t&&(t=l.lastAccessed,e=r);e&&this.cache.delete(e)}cleanup(){let e=Date.now(),t=[];for(let[r,l]of this.cache.entries())e-l.timestamp>l.ttl&&t.push(r);t.forEach(e=>this.cache.delete(e)),this.stats.size=this.cache.size}getTopEntries(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10;return Array.from(this.cache.entries()).map(e=>{let[t,r]=e;return{key:t,accessCount:r.accessCount,lastAccessed:r.lastAccessed}}).sort((e,t)=>t.accessCount-e.accessCount).slice(0,e)}constructor(e=100,t=3e5){this.cache=new Map,this.maxSize=e,this.defaultTTL=t,this.stats={hits:0,misses:0,size:0,maxSize:e},setInterval(()=>this.cleanup(),6e4)}}let b=new C(50,6e5),E=new C(20,3e5),U=new C(30,12e4),z=new C(40,9e5),P=new C(25,18e4),x={collegeProfile:e=>"college:profile:".concat(e),collegeList:e=>{let t=Object.keys(e).sort().map(t=>"".concat(t,":").concat(e[t])).join("|");return"colleges:list:".concat(t)},collegeCourses:e=>"college:".concat(e,":courses"),collegeNotices:e=>"college:".concat(e,":notices"),collegeStats:e=>"college:".concat(e,":stats")},k={invalidateCollegeData:(e,t)=>{t&&b.delete(x.collegeProfile(t)),z.delete(x.collegeCourses(e)),P.delete(x.collegeNotices(e)),U.delete(x.collegeStats(e)),E.clear()},invalidateAllCaches:()=>{b.clear(),E.clear(),U.clear(),z.clear(),P.clear()}},q={warmCollegeProfile:async(e,t)=>{if(!b.has(x.collegeProfile(e)))try{let r=await t();b.set(x.collegeProfile(e),r)}catch(t){console.error("Failed to warm cache for college profile ".concat(e,":"),t)}},warmPopularColleges:async(e,t)=>{let r=e.map(e=>q.warmCollegeProfile(e,()=>t(e)));await Promise.allSettled(r)}},A={createProfile:async e=>{let t=await g(e);return t.data&&E.clear(),t},getProfileBySlug:async e=>{let t=x.collegeProfile(e),r=b.get(t);if(r)return{data:r,error:null};let l=await d(e);return l.data&&!l.error&&b.set(t,l.data),l},updateProfile:async(e,t)=>{let r=await h(e,t);return r.data&&k.invalidateCollegeData(e,r.data.slug||void 0),r},getAllProfiles:async()=>{let e=x.collegeList({}),t=E.get(e);if(t)return{data:t,error:null};let r=await v();return r.data&&!r.error&&E.set(e,r.data),r},generateSlug:u.generateSlug,validateSlug:u.validateSlug,ensureUniqueSlug:u.ensureUniqueSlug,sanitizeSlug:u.sanitizeSlug,getCourses:async e=>{let t=x.collegeCourses(e),r=z.get(t);if(r)return{data:r,error:null};let l=await f(e);return l.data&&!l.error&&z.set(t,l.data),l},getAllCourses:y,createCourse:async e=>{let t=await p(e);return t.data&&z.delete(x.collegeCourses(e.college_id)),t},updateCourse:async(e,t)=>{let r=await _(e,t);return r.data&&"college_id"in r.data&&z.delete(x.collegeCourses(r.data.college_id)),r},deleteCourse:async e=>{let t=await m(e);return t.data&&"college_id"in t.data&&z.delete(x.collegeCourses(t.data.college_id)),t},getNotices:async e=>{let t=x.collegeNotices(e),r=P.get(t);if(r)return{data:r,error:null};let l=await w(e);return l.data&&!l.error&&P.set(t,l.data),l},createNotice:async e=>{let t=await S(e);return t.data&&P.delete(x.collegeNotices(e.college_id)),t}},D={...A,getProfileOptimized:async e=>{let t=x.collegeProfile(e),r=b.get(t);if(r)return{data:r,error:null};try{let r=o(),{data:l,error:a}=await r.rpc("get_college_profile_optimized",{college_slug:e}).single();if(a)return console.error("Error fetching optimized college profile:",a),{data:null,error:a.message};if(!l||!l.college_data)return{data:null,error:"College not found"};let s={...l.college_data,courses:l.courses_data||[],notices:l.notices_data||[],stats:l.stats_data||{}};return b.set(t,s,9e5),{data:s,error:null}}catch(t){return console.error("Error in optimized profile fetch:",t),A.getProfileBySlug(e)}},getCollegesPaginated:async e=>{let t=x.collegeList(e),r=E.get(t);if(r)return{data:r,error:null};try{let r=o(),l=e.limit||20,a=e.offset||0,s=r.from("colleges").select("\n          id,\n          slug,\n          name,\n          type,\n          location,\n          address,\n          website,\n          phone,\n          email,\n          established_year,\n          accreditation,\n          gallery,\n          created_at\n        ").eq("is_active",!0).order("name");e.state&&(s=s.eq("location->>state",e.state)),e.type&&(s=s.eq("type",e.type)),e.search&&(s=s.or("name.ilike.%".concat(e.search,"%,address.ilike.%").concat(e.search,"%"))),s=s.range(a,a+l-1);let{data:n,error:c,count:i}=await s;if(c)return console.error("Error fetching paginated colleges:",c),{data:null,error:c.message};let u={colleges:n||[],total:i||0,limit:l,offset:a,hasMore:(i||0)>a+l};return E.set(t,u,18e4),{data:u,error:null}}catch(e){return console.error("Error in paginated colleges fetch:",e),{data:null,error:"Failed to fetch colleges"}}},warmPopularColleges:async e=>{await q.warmPopularColleges(e,async e=>(await D.getProfileOptimized(e)).data)},getCacheStats:()=>({profileCache:b.getStats(),listCache:E.getStats(),courseCache:z.getStats(),noticeCache:P.getStats()}),clearAllCaches:()=>{k.invalidateAllCaches()},preloadCollegeData:async e=>{let t=[D.getProfileOptimized(e)];await Promise.allSettled(t)}}}}]);